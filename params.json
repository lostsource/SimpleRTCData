{"name":"SimpleRTCData","tagline":"SimpleRTCData is a JavaScript library which can be used to establish an RTCDataChannel between two peers.","body":"## SimpleRTCData\r\n\r\nSimpleRTCData can be used to establish an RTCDataChannel between two or more peers. It does not handle the signalling stage so you will need to implement your own mechanism for that.\r\n\r\n### Basic Usage\r\n\r\nAssuming two peers Bert and Ernie in which Bert is the initiator, Bert needs to make an 'offer' to Ernie by calling the `getOffer` method:\r\n\r\n    var BertRTC = new SimpleRTCData;\r\n    BertRTC.getOffer(function(bertsOffer) {\r\n      // 'bertsOffer' is the string to be sent to Ernie\r\n    });\r\n\r\nAt this point the offer needs to be sent to Ernie in any way preferred, WebSockets, E-mail, magic etc.. Once Ernie receives Bert's offer he will need to create an 'answer' by passing it as the first argument to `getAnswer`: \r\n\r\n    var ErnieRTC = new SimpleRTCData;\r\n    ErnieRTC.getAnswer(bertsOffer,function(erniesAnswer) {\r\n      // 'erniesAnswer' is the string to be sent to Bert\r\n    });\r\n    \r\nAgain, the transport used to send `erniesAnswer` is not relevant however Bert will need to use it's value to call `setAnswer`\r\n\r\n    BertRTC.setAnswer(erniesAnswer);\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}